package com.microservice.api_gateway.config;

import org.springframework.security.core.userdetails.ReactiveUserDetailsService;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import reactor.core.publisher.Mono;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class CustomUserDetailsService implements ReactiveUserDetailsService {

    private final Map<String, UserDetails> users = new ConcurrentHashMap<>();

    public CustomUserDetailsService(AdminCredentials adminCredentials) {
        // Load admin from properties (plain text)
        addUser(adminCredentials.getUsername(), adminCredentials.getPassword(), "ADMIN");
        // Optional default customer
        addUser("customer", "custpass", "CUSTOMER");
    }

    @Override
    public Mono<UserDetails> findByUsername(String username) {
        return Mono.justOrEmpty(users.get(username));
    }

    public void addUser(String username, String password, String role) {
        UserDetails user = User.withUsername(username)
                .password(password)  
                .roles(role)
                .build();
        users.put(username, user);
    }

    public void updateUserRole(String username, String newRole) {
        UserDetails existing = users.get(username);
        if (existing != null) {
            UserDetails updated = User.withUsername(username)
                    .password(existing.getPassword())
                    .roles(newRole)
                    .build();
            users.put(username, updated);
        }
    }
}